createSG
Inbound: 22(TCP, AnyOpen), 80(TCP, AnyOpen), 443(TCP, AnyOpen), 53(TCP, UDP, Source=ClusterSG)
Outbound: All Traffic(AnyOpen), 53(TCP, UDP, Destination=ClusterSG)

edit clusterSG
Inbound: 53(TCP, UDP, Source=NewSG)

kubectl set env daemonset aws-node -n kube-system ENABLE_POD_ENI=true

apiVersion: vpcresources.k8s.aws/v1beta1
kind: SecurityGroupPolicy
metadata:
  name: example
spec:
  podSelector:
    matchLabels:
      KEY: VALUE
  securityGroups:
    groupIds:
      - NEW_SG_ID

https://aws.github.io/aws-eks-best-practices/ko/security/docs/network/
https://kubernetes.io/docs/concepts/security/

https://repost.aws/knowledge-center/eks-set-up-externaldns
https://velog.io/@ironkey/AWS-EKS%EC%97%90%EC%84%9C-%EB%8F%99%EC%9E%91%EC%A4%91%EC%9D%B8-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88%EC%97%90-External-DNS%EB%A1%9C-%EB%8F%84%EB%A9%94%EC%9D%B8-%EC%97%B0%EA%B2%B0%ED%95%98%EA%B8%B0

https://docs.aws.amazon.com/ko_kr/Route53/latest/DeveloperGuide/domain-configure-dnssec.html
https://docs.aws.amazon.com/ko_kr/Route53/latest/DeveloperGuide/dns-configuring-dnssec.html
https://docs.aws.amazon.com/ko_kr/Route53/latest/DeveloperGuide/security.html

https://docs.aws.amazon.com/ko_kr/Route53/latest/DeveloperGuide/resolver-dns-firewall.html

https://kubernetes.io/docs/concepts/security/pod-security-standards/

https://dya-only.notion.site/_25-_-3b21a1ffadf3437e950ce809181f693b
